<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Boardgame Pick</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: #f5f5f5;
            color: #333;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 15px;
        }
        
        .header {
            text-align: center;
            margin-bottom: 20px;
        }
        
        .header h1 {
            color: #1976d2;
            margin-bottom: 8px;
            font-size: 24px;
        }
        
        .header p {
            font-size: 14px;
            color: #666;
        }
        
        .search-form {
            background: white;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 15px;
        }
        
        .search-row {
            display: flex;
            gap: 8px;
            margin-bottom: 10px;
            flex-wrap: wrap;
        }
        
        .search-input {
            flex: 1;
            min-width: 120px;
            padding: 8px 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
        }
        
        .search-button {
            background: #1976d2;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            white-space: nowrap;
        }
        
        .search-button:hover {
            background: #1565c0;
        }
        
        .checkbox-container {
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 14px;
        }
        
        .game-grid {
            display: grid;
            gap: 12px;
            margin-bottom: 20px;
        }
        
        @media (min-width: 768px) {
            .game-grid {
                grid-template-columns: repeat(3, 1fr);
            }
        }
        
        @media (max-width: 767px) {
            .game-grid {
                grid-template-columns: repeat(3, 1fr);
                gap: 8px;
            }
            
            .container {
                padding: 10px;
            }
            
            .search-row {
                flex-direction: column;
                gap: 6px;
            }
            
            .search-input {
                min-width: auto;
            }
        }
        
        @media (max-width: 480px) {
            .game-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 6px;
            }
        }
        
        .game-card {
            background: white;
            border-radius: 6px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            overflow: hidden;
            transition: transform 0.2s;
            min-height: 200px;
        }
        
        .game-card:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 6px rgba(0,0,0,0.15);
        }
        
        .game-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }
        
        .game-content {
            padding: 15px;
        }
        
        .game-title {
            font-size: 16px;
            font-weight: bold;
            color: #1976d2;
            margin-bottom: 8px;
            text-decoration: none;
            line-height: 1.3;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        
        .game-title:hover {
            text-decoration: underline;
        }
        
        .game-info {
            font-size: 13px;
            color: #666;
            margin-bottom: 4px;
            line-height: 1.3;
        }
        
        .favorite-button {
            background: none;
            border: none;
            font-size: 18px;
            cursor: pointer;
            color: #bbb;
            transition: color 0.2s;
            padding: 2px;
        }
        
        .favorite-button.active {
            color: #FFD600;
        }
        
        .favorite-button:hover {
            color: #FFD600;
        }
        
        .rating-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 1000;
        }
        
        .modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 25px;
            border-radius: 12px;
            width: 90%;
            max-width: 350px;
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
        }
        
        .modal-title {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 20px;
            text-align: center;
            color: #333;
        }
        
        .star-rating {
            display: flex;
            justify-content: center;
            gap: 4px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }
        
        .star {
            font-size: 24px;
            cursor: pointer;
            color: #ddd;
            transition: color 0.2s;
            line-height: 1;
        }
        
        .star:hover,
        .star.active {
            color: #FFD700;
        }
        
        .rating-text {
            text-align: center;
            font-size: 16px;
            margin-bottom: 15px;
            color: #666;
        }
        
        .review-input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 6px;
            margin-bottom: 15px;
            font-size: 14px;
            resize: vertical;
            min-height: 80px;
            font-family: inherit;
        }
        
        .review-input:focus {
            outline: none;
            border-color: #1976d2;
        }
        
        .modal-buttons {
            display: flex;
            gap: 10px;
            justify-content: center;
        }
        
        .modal-button {
            padding: 10px 20px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.2s;
        }
        
        .modal-button.primary {
            background: #1976d2;
            color: white;
        }
        
        .modal-button.primary:hover {
            background: #1565c0;
        }
        
        .modal-button.secondary {
            background: #f5f5f5;
            color: #333;
        }
        
        .modal-button.secondary:hover {
            background: #e0e0e0;
        }
        
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 8px;
            margin-top: 20px;
            flex-wrap: wrap;
        }
        
        .page-button {
            padding: 6px 10px;
            border: 1px solid #ddd;
            background: white;
            color: #333;
            text-decoration: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            min-width: 32px;
            text-align: center;
        }
        
        .page-button.active {
            background: #1976d2;
            color: white;
            border-color: #1976d2;
        }
        
        .page-button:hover {
            background: #f5f5f5;
        }
        
        .page-button.active:hover {
            background: #1565c0;
        }
        
        .stats {
            text-align: center;
            margin-bottom: 15px;
            color: #666;
            font-size: 14px;
        }
        
        .rating-button, .review-button {
            margin-left: 5px;
            padding: 2px 6px;
            background: #1976d2;
            color: white;
            border: none;
            border-radius: 3px;
            cursor: pointer;
            font-size: 10px;
        }
        
        .review-button {
            background: #4caf50;
        }
        
        @media (max-width: 767px) {
            .game-image {
                height: 120px;
            }
            
            .game-content {
                padding: 10px;
            }
            
            .game-title {
                font-size: 14px;
                margin-bottom: 6px;
            }
            
            .game-info {
                font-size: 11px;
                margin-bottom: 3px;
                line-height: 1.2;
            }
            
            .favorite-button {
                font-size: 16px;
            }
            
            .page-button {
                padding: 8px 12px;
                font-size: 16px;
                min-width: 40px;
            }
            
            .rating-button {
                font-size: 11px;
                padding: 3px 8px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1 style="font-size: 50px; font-weight: bold; color: #1976d2;">Boardgame Pick</h1>
        </div>

        <!-- 검색 폼 -->
        <form class="search-form" method="GET">
            <div class="search-row">
                <input type="text" name="search" placeholder="🎮 게임명 검색" 
                       value="<%= search %>" class="search-input">
                <input type="text" name="searchPlayers" placeholder="👥 인원 (예: 2, 2-4)" 
                       value="<%= searchPlayers %>" class="search-input">
                <input type="text" name="searchBest" placeholder="⭐ 베스트 (예: 3, 2-4)" 
                       value="<%= searchBest %>" class="search-input">
            </div>
            <div class="search-row">
                <input type="number" name="weightMin" placeholder="🎯 난이도 최소" 
                       value="<%= weightMin %>" class="search-input" step="0.1" min="0" max="5">
                <input type="number" name="weightMax" placeholder="🎯 난이도 최대" 
                       value="<%= weightMax %>" class="search-input" step="0.1" min="0" max="5">
                <div class="checkbox-container">
                    <input type="checkbox" name="showFavoritesOnly" id="favorites" 
                           <%= showFavoritesOnly ? 'checked' : '' %>>
                    <label for="favorites">즐겨찾기만</label>
                </div>
                <select name="sortBy" class="search-input" style="min-width: 120px;">
                    <option value="rating" <%= sortBy === 'rating' ? 'selected' : '' %>>평점순</option>
                    <option value="myRating" <%= sortBy === 'myRating' ? 'selected' : '' %>>내 평점순</option>
                    <option value="weight" <%= sortBy === 'weight' ? 'selected' : '' %>>난이도순</option>
                    <option value="name" <%= sortBy === 'name' ? 'selected' : '' %>>이름순</option>
                    <option value="players_recommended" <%= sortBy === 'players_recommended' ? 'selected' : '' %>>추천인원순</option>
                    <option value="play_time_min" <%= sortBy === 'play_time_min' ? 'selected' : '' %>>시간순</option>
                </select>
                <select name="sortOrder" class="search-input" style="min-width: 80px;">
                    <option value="desc" <%= sortOrder === 'desc' ? 'selected' : '' %>>내림차순</option>
                    <option value="asc" <%= sortOrder === 'asc' ? 'selected' : '' %>>오름차순</option>
                </select>
                <button type="submit" class="search-button">🔍 검색</button>
            </div>

        </form>

        <!-- 통계 -->
        <div class="stats">
            📊 총 <%= total %>개 결과 | 📄 <%= currentPage %> / <%= totalPages %> 페이지
        </div>

        <!-- 게임 그리드 -->
        <div class="game-grid">
            <% games.forEach(function(game) { %>
                <div class="game-card">
                    <% if (game.main_image_url) { %>
                        <img src="<%= game.main_image_url %>" alt="<%= game.name %>" class="game-image">
                    <% } %>
                    <div class="game-content">
                        <div style="display: flex; justify-content: space-between; align-items: start;">
                            <a href="<%= game.url %>" target="_blank" class="game-title"><%= game.displayName %></a>
                            <button class="favorite-button <%= game.is_favorite ? 'active' : '' %>" 
                                    data-rowid="<%= game.bgg_id %>" 
                                    data-favorite="<%= game.is_favorite ? 1 : 0 %>">
                                <%= game.is_favorite ? '★' : '☆' %>
                            </button>
                        </div>
                        <div class="game-info">
                            <% if (game.players_recommended) { %>👥 <%= game.players_recommended %><% } %>
                            <% if (game.players_recommended && game.players_best) { %> | <% } %>
                            <% if (game.players_best) { %>⭐ <%= game.players_best %><% } %>
                        </div>
                        <div class="game-info">⏱️ <%= game.play_time_min || 0 %>~<%= game.play_time_max || 0 %>분 
                            | 난이도: <%= game.weight || 0 %></div>
                        <div class="game-info">🌟 <%= game.rating || 0 %> 
                            | 내 평점: <%= game.myRating || '-' %>
                            <button onclick="openRatingModal(<%= game.bgg_id %>)" 
                                    data-game-name="<%= game.displayName %>"
                                    class="rating-button">
                                평점 입력
                            </button>
                            <% if (game.myRating) { %>
                                <button onclick="openReviewModal(<%= game.bgg_id %>)" 
                                        data-game-name="<%= game.displayName %>"
                                        class="review-button">
                                    리뷰 보기
                                </button>
                            <% } %>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>

        <!-- 페이지네이션 -->
        <% if (totalPages > 1) { %>
            <div class="pagination">
                <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage - 1 %>&search=<%= search %>&searchPlayers=<%= searchPlayers %>&searchBest=<%= searchBest %>&weightMin=<%= weightMin %>&weightMax=<%= weightMax %>&showFavoritesOnly=<%= showFavoritesOnly ? 'on' : '' %>&sortBy=<%= sortBy %>&sortOrder=<%= sortOrder %>" 
                       class="page-button">◀ 이전</a>
                <% } %>
                
                <% for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) { %>
                    <a href="?page=<%= i %>&search=<%= search %>&searchPlayers=<%= searchPlayers %>&searchBest=<%= searchBest %>&weightMin=<%= weightMin %>&weightMax=<%= weightMax %>&showFavoritesOnly=<%= showFavoritesOnly ? 'on' : '' %>&sortBy=<%= sortBy %>&sortOrder=<%= sortOrder %>" 
                       class="page-button <%= i === currentPage ? 'active' : '' %>"><%= i %></a>
                <% } %>
                
                <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage + 1 %>&search=<%= search %>&searchPlayers=<%= searchPlayers %>&searchBest=<%= searchBest %>&weightMin=<%= weightMin %>&weightMax=<%= weightMax %>&showFavoritesOnly=<%= showFavoritesOnly ? 'on' : '' %>&sortBy=<%= sortBy %>&sortOrder=<%= sortOrder %>" 
                       class="page-button">다음 ▶</a>
                <% } %>
            </div>
        <% } %>
    </div>

    <!-- 평점 입력 모달 -->
    <div id="ratingModal" class="rating-modal">
        <div class="modal-content">
            <div class="modal-title">내 평점 남기기</div>
            <div class="rating-text" id="ratingText">별점을 선택해주세요</div>
            <div class="star-rating">
                <span class="star" onclick="selectRating(1)">⭐</span>
                <span class="star" onclick="selectRating(2)">⭐</span>
                <span class="star" onclick="selectRating(3)">⭐</span>
                <span class="star" onclick="selectRating(4)">⭐</span>
                <span class="star" onclick="selectRating(5)">⭐</span>
                <span class="star" onclick="selectRating(6)">⭐</span>
                <span class="star" onclick="selectRating(7)">⭐</span>
                <span class="star" onclick="selectRating(8)">⭐</span>
                <span class="star" onclick="selectRating(9)">⭐</span>
                <span class="star" onclick="selectRating(10)">⭐</span>
            </div>
            <textarea id="reviewText" class="review-input" placeholder="리뷰를 작성해주세요 (선택사항)"></textarea>
            <div class="modal-buttons">
                <button class="modal-button secondary" onclick="closeRatingModal()">취소</button>
                <button class="modal-button primary" onclick="saveRating()">저장</button>
            </div>
        </div>
    </div>

    <!-- 리뷰 보기 모달 -->
    <div id="reviewModal" class="rating-modal">
        <div class="modal-content">
            <div class="modal-title">내 리뷰</div>
            <div id="reviewContent" style="margin-bottom: 20px;">
                <div style="margin-bottom: 15px;">
                    <strong>평점:</strong> <span id="reviewRatingDisplay"></span>
                </div>
                <div>
                    <strong>리뷰:</strong>
                    <div id="reviewTextDisplay" style="margin-top: 10px; padding: 10px; background: #f5f5f5; border-radius: 6px; min-height: 60px;"></div>
                </div>
            </div>
            <div class="modal-buttons">
                <button class="modal-button secondary" onclick="closeReviewModal()">닫기</button>
            </div>
        </div>
    </div>

    <script>
        let currentBggId = null;
        let currentGameName = null;
        let selectedRating = 0;

        function toggleFavorite(button, rowId, currentFav) {
            const requestData = {
                rowId: rowId,
                currentFav: currentFav
            };
            
            // 버튼 비활성화
            button.disabled = true;
            
            fetch('/toggle-favorite', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(requestData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // 버튼 상태만 업데이트
                    if (data.isFavorite) {
                        button.innerHTML = '★';
                        button.classList.add('active');
                        button.setAttribute('data-favorite', '1');
                    } else {
                        button.innerHTML = '☆';
                        button.classList.remove('active');
                        button.setAttribute('data-favorite', '0');
                    }
                } else {
                    alert('즐겨찾기 업데이트 실패');
                }
            })
            .catch(error => {
                console.error('즐겨찾기 토글 에러:', error);
                alert('즐겨찾기 토글 중 오류가 발생했습니다.');
            })
            .finally(() => {
                // 버튼 다시 활성화
                button.disabled = false;
            });
        }

        function openRatingModal(bggId) {
            currentBggId = bggId;
            const button = event.target;
            currentGameName = button.getAttribute('data-game-name');
            
            selectedRating = 0;
            updateStarDisplay();
            
            document.getElementById('ratingModal').style.display = 'block';
        }

        function closeRatingModal() {
            document.getElementById('ratingModal').style.display = 'none';
        }

        function updateStarDisplay() {
            const stars = document.querySelectorAll('.star');
            const ratingText = document.getElementById('ratingText');
            
            stars.forEach((star, index) => {
                const rating = index + 1;
                if (rating <= selectedRating) {
                    star.classList.add('active');
                } else {
                    star.classList.remove('active');
                }
            });
            
            if (selectedRating > 0) {
                ratingText.textContent = `${selectedRating}점을 선택했습니다`;
            } else {
                ratingText.textContent = '별점을 선택해주세요';
            }
        }

        function selectRating(rating) {
            selectedRating = rating;
            updateStarDisplay();
        }

        function saveRating() {
            if (selectedRating === 0) {
                alert('별점을 선택해주세요');
                return;
            }

            const reviewText = document.getElementById('reviewText').value;

            fetch('/add-review', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    bggId: currentBggId,
                    rating: selectedRating,
                    text: reviewText
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    closeRatingModal();
                    // 간단한 성공 메시지 표시
                    alert('평점이 저장되었습니다!');
                }
            })
            .catch(error => {
                console.error('평점 저장 에러:', error);
                alert('평점 저장 중 오류가 발생했습니다.');
            });
        }

        function openReviewModal(bggId) {
            fetch(`/get-review?bggId=${bggId}`)
            .then(response => response.json())
            .then(data => {
                if (data.success && data.review) {
                    document.getElementById('reviewRatingDisplay').textContent = `${data.review.rating}점`;
                    document.getElementById('reviewTextDisplay').textContent = data.review.text || '리뷰가 없습니다.';
                    document.getElementById('reviewModal').style.display = 'block';
                } else {
                    alert('리뷰를 찾을 수 없습니다.');
                }
            })
            .catch(error => {
                console.error('리뷰 조회 에러:', error);
                alert('리뷰 조회 중 오류가 발생했습니다.');
            });
        }

        function closeReviewModal() {
            document.getElementById('reviewModal').style.display = 'none';
        }

        // 모달 외부 클릭시 닫기
        document.getElementById('ratingModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeRatingModal();
            }
        });

        document.getElementById('reviewModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeReviewModal();
            }
        });

        // 즐겨찾기 버튼 이벤트 리스너 추가
        document.addEventListener('DOMContentLoaded', function() {
            const favoriteButtons = document.querySelectorAll('.favorite-button');
            favoriteButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const rowId = this.getAttribute('data-rowid');
                    const currentFav = this.getAttribute('data-favorite');
                    toggleFavorite(this, parseInt(rowId), parseInt(currentFav));
                });
            });
        });
    </script>
</body>
</html> 